[{
    "title": "SSH verbinden(Deutsch/中文 )",
    "date": "",
    "description": "",
    "body": "SSH verbinden (Deutsch/中文 )   Wenn eine Remote-Anmeldung zulässig ist, können Sie sich mit Secure Shell (SSH) oder SecureCRT, Transmit von einem anderen Computer aus bei Ihrem Mac anmelden.\n  Sie können Telnet nicht verwenden, um sich bei Ihrem Mac anzumelden.\n   Richten Sie die Remote-Anmeldung auf dem Mac ein - Vorbereitung: Das Mac-Betriebssystem erkennt, ob SSH aktiviert ist\nErkennungsbefehl: sudo systemsetup -getremotelogin Aktivieren Sie den Befehl: sudo systemsetup -setremotelogin on Schalten Sie den Befehl aus: sudo systemsetup -setremotelogin off Überprüfen Sie, ob ssh aktiviert ist Wenn Sie Vollzugriffsberechtigungen benötigen, gehen Sie zu \u0026ldquo;Sicherheit\u0026rdquo; -\u0026gt; \u0026ldquo;Datenschutz\u0026rdquo; sshd und Terminal einklicken\n- Durchführen  Wählen Sie auf Ihrem Mac Apple-Menü\u0026gt; Systemeinstellungen, klicken Sie auf Freigabe und wählen Sie dann Remote-Anmeldung. Aktivieren Sie das Kontrollkästchen \u0026ldquo;Remote Login\u0026rdquo;. Wenn \u0026ldquo;Remote Login\u0026rdquo; ausgewählt ist, ist auch der SFTP-Dienst (Secure FTP) aktiviert. Geben Sie an, welche Benutzer sich anmelden können: -Alle Benutzer: Jeder Benutzer Ihres Computers und jeder im Netzwerk kann sich anmelden. -Nur diese Benutzer: Klicken Sie auf die Schaltfläche Hinzufügen und wählen Sie aus, wer sich remote anmelden kann. \u0026ldquo;Benutzer und Gruppen\u0026rdquo; umfasst alle Benutzer auf Ihrem Mac. \u0026ldquo;Netzwerkbenutzer\u0026rdquo; und \u0026ldquo;Netzwerkgruppen\u0026rdquo; umfassen alle Personen in Ihrem Netzwerk.   Melden Sie sich von einem anderen Computer aus beim Mac an  Öffnen Sie auf einem anderen Computer die App \u0026ldquo;Terminal\u0026rdquo; (falls es sich um einen Mac handelt) oder den SSH-Client. Geben Sie den Befehl ssh ein und drücken Sie die Eingabetaste. -Das allgemeine Format des Befehls ssh: ssh Benutzername @ IPAddress  Wenn Ihr Benutzername beispielsweise steve lautet und die IP-Adresse Ihres Computers 10.1.2.3 lautet, geben Sie den folgenden Befehl ein: $ ssh steve@10.1.2.3   Geben Sie das Passwort ein und drücken Sie die Eingabetaste.  SecureSRT Transmit zur Terminalsteuerung und Dateiübertragung\n SSH 连接  如果允许远程登录，您可以从另一台电脑使用 Secure Shell (SSH) 或SecureCRT,Transmit 登录您的 Mac。  不能使用Telnet来登录您的 Mac。 在Mac上设置远程登录 准备： Mac 操作系统检测SSH是否开启\n检测命令：sudo systemsetup -getremotelogin 开启命令：sudo systemsetup -setremotelogin on 关闭命令：sudo systemsetup -setremotelogin off 看是否开启了ssh 若需要全盘进入权限，进入“安全”\u0026ndash;\u0026gt; \u0026ldquo;数据保护“设置 ，需开启sshd,和terminal\n执行  在 Mac 上，选取苹果菜单 \u0026gt;“系统偏好设置”，点按“共享”，然后选择“远程登录”。 选择“远程登录”复选框。选择“远程登录”时，还会启用安全 FTP（SFTP）服务。 指定哪些用户可以登录：  所有用户：您电脑的任何用户及网络上的任何人都可以登录。 仅这些用户：点按添加按钮 ，然后选取谁能以远程方式登录。“用户与群组”包含您 Mac 上的所有用户。“网络用户”和“网络群组”包含您网络上的所有人。     从其他电脑登录 Mac  在其他电脑上，打开“终端” App（如果是 Mac）或 SSH 客户端。 键入 ssh 命令，然后按下 Return 键。  ssh 命令的通用格式：ssh username@IPAddress 例如，如果您的用户名为 steve，您电脑的 IP 地址为 10.1.2.3，请输入以下命令：$ ssh steve@10.1.2.3   输入密码，然后按下 Return 键。  SecureSRT Transmit 实现终端控制和文件传输\n",
    "ref": "/post/blog5/"
  },{
    "title": "Linux experimental environment in multi-node （Deutsch/ 中文）",
    "date": "",
    "description": "",
    "body": "Linux experimental environment in multi-node（Deutsch/ 中文）  ifconfig kontrolieren die IP-Adresse des Hosts und Linux Pingen Sie die Adressen beider Parteien an, um festzustellen, ob sie kommunizieren können Netzwerkeinstellungen der virtuellen Maschine wlan Legen Sie die statische IP für die virtuelle Maschine fest  su root, um Root-Rechte einzugeben dhclient legt zu diesem Zeitpunkt eine verfügbare IP-Adresse ein statistische IP statt dynamische IP fest. Um sicherzustellen, dass sie sich nicht ändert, muss sie auf der Netzwerkkarte konfiguriert werden vim / etc / sysconfig / network- scripts / ifcfg-ens33 bootproto = ~~ dhcp ~~ static onboot = ~~ no ~~ yes Add static ip-\u0026gt;  IPADDR = 192.168.40.128 NETMASK = 255.255.255.0 GATEWAY = 192.168.178.1 DNS1 = 119,29,29,29 -: wp speichern und beenden   Starten Sie die Netzwerkkarte systemctl neu. systemctl restart network.service   SecureCRT-Verbindungstest Dateiübertragung übertragen  linux 实验环境及其网络配置  ifconfig 看宿主机和linux的ip地址 ping 双方地址看是否可通 虚拟机网络设置 wlan 给虚拟机设置静态ip  su root 进入root 权限 dhclient 设置一个网络类可用ip地址,此时为动态ip，为了保证不变化，需要配置到网卡 vim /etc/sysconfig/network- scripts/ifcfg-ens33 bootproto = dhcp static onboot = no yes 添加静态ip-\u0026gt; IPADDR = 192.168.40.128  NETMASK=255.255.255.0 GATEWAY=192.168.178.1 DNS1=119.29.29.29 :wp保存退出   重启网卡 systemctl restart network.service   SecureCRT 连接测试 transmit 文件互传  ",
    "ref": "/post/blog4/"
  },{
    "title": "Contact_me",
    "date": "",
    "description": "",
    "body": "Email：dingsiyu0107@gmail.com ",
    "ref": "/contact/"
  },{
    "title": "Class",
    "date": "",
    "description": "",
    "body": "",
    "ref": "/categories/"
  },{
    "title": "About_me",
    "date": "",
    "description": "",
    "body": "Hi ！ it\u0026rsquo;s me Ding Nice to see you！ i\u0026rsquo;m studying in Leibniz University Hannover Germany . major mechanical. Love coding just like you. If you got any question about my blogs , just contact me in (Chinese;Deutsch;English) : dingsiyu0107@gmail.com ",
    "ref": "/about/"
  },{
    "title": "Hugo Website erstellen",
    "date": "",
    "description": "",
    "body": "Hugo Website erstellen(Verbereitungsphase) 1）Notwendige Werkzeuge  homebrew （Es ist ein Softwaresverwaltungstool unter Mac OS, mit dem Sie problemlos Softwaretools usw. installieren / deinstallieren können, ähnlich wie Softwaresverwaltungstools wie apt-get unter Linux und npm von node） hugo （Hugo ist ein statischer Website-Generator, der von der Sprache Go geschieben wird. Einfach, benutzerfreundlich, effizient, leicht zu erweitern und schnell bereitzustellen.） git （Versionskontrolle）  2)Installationsmethode homebrew：  eingeben im Terminal /usr/bin/ruby -e \u0026quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install Automatisch installieren  hogo  brew install hugo  git：  brew install git   Hugo Wesite erstellen(Prozess)   hugo new site myblog Site generieren \u0026ldquo;myblog\u0026rdquo; ersetzbar\n  Öffen Sie die Sitetheme.gohugo.io um themes zu finden\n  cd myblog in path\n  Zum Beispiel：git clone https://github.com/vaga/hugo-theme-m10c.git themes/m10c Laden Sie das m10c-Thema in das \u0026ldquo;Themen\u0026rdquo; Ordner herunter\n  hugo server -t m10c --buildDrafts Starten Sie den lokale Server Suchen Sie die localhost-Adresse im Terminal. Sie können überprüfen, ob die lokale Webseite erfolgreich geöffnet wurde\n  Doku schreiben：hugo new post/blog.md Erstellen Sie das erste Markdown-Dokument(Markdown_form empfehlen)\n  Erstellen Sie ein Repository auf dem Remote-Github\n  hugo --theme=m10c --baseUrl=\u0026quot;http://XXXXXXX.github.io/\u0026quot; --buildDrafts Generieren Sie automatisch die Dateien, wenn diese mit Remotesadressen verknüpft sind\n  cd public/ git init //Initialisieren Sie den \u0026quot;public\u0026quot; Ordner, um daraus ein Git-Paket zu machen git add . git commit -m\u0026quot;my hugo first blog\u0026quot; git remote add origin http://github.com/xxxxxxx/xxxxxxx.github.io.git git push -u origin master //first time -Seite aktualisieren\ncd myblog hugo cd public git add . git status git commit -m \u0026quot;add blog post\u0026quot; git push noch etwas Problem? Kannst du es nicht schaffen? Kontakt Email ： dingsiyu0107@gmail.com\n",
    "ref": "/post/blog3/"
  },{
    "title": "Markdown",
    "date": "",
    "description": "",
    "body": "markdown 基本 1）标题  在想要设置为标题的文字前面加#来表示 一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。  注：标准语法一般在#后跟个空格再写文字，貌似简书不加空格也行。\n示例：\n# 这是一级标题 ## 这是二级标题 ### 这是三级标题 #### 这是四级标题 ##### 这是五级标题 ###### 这是六级标题  2)字体   加粗\n要加粗的文字左右分别用两个*号包起来\n  斜体\n要倾斜的文字左右分别用一个*号包起来，尾部加`\n  斜体加粗\n要倾斜和加粗的文字左右分别用三个*号包起来\n  删除线\n要加删除线的文字左右分别用两个~~号包起来\n  示例：\n**这是加粗的文字** *这是倾斜的文字*` ***这是斜体加粗的文字*** ~~这是加删除线的文字~~ 效果如下：\n 这是加粗的文字 这是倾斜的文字` 这是斜体加粗的文字 这是加删除线的文字   3) 引用 在引用的文字前加\u0026gt;即可。引用也可以嵌套，如加两个\u0026raquo;三个\u0026raquo;\u0026gt; n个\u0026hellip;\n示例：\n\u0026gt; 引用 \u0026gt;\u0026gt; 引用 效果如下：\n 引用\n 引用\n   4）分割线 三个或者三个以上的 -\n示例：\n--- ------- 效果如下：   5) 图片 语法：\n![图片下方解释](图片地址“图片title”) 示例： 利用ms图床\n 6) 超链接  [链接名](链接地址) 示例：\ngoogle\n 7) 列表 无序列表\n- liebiao + liebiao * liebiao 示例：\n liebiao   liebiao   liebiao  多用 -\n有序列表\n1. liebiao 2. liebiao 示例：\n liebiao liebiao  列表嵌套 上下级之间敲三个空格\n 8）表格 语法\n 表头|表头|表头 ---|:--:|---: 内容|内容|内容 内容|内容|内容 示例：\n   姓名 专业 年龄     小丁 mb 18   小成 bwl 18   小张 economic 18   小刘 et 18   大蒋 et 18     9）代码 语法 打点 daima\ndaima  嘿嘿嘿 没了\n",
    "ref": "/post/blog2/"
  },{
    "title": "hugo 静态网页创建",
    "date": "",
    "description": "",
    "body": "hugo 静态网页创建(准备) 1）hugo 必要的工具  homebrew （是一款Mac OS上的软件包管理工具，通过它可以很方便的安装/卸载软件工具等，类似于Linux下的apt-get，node的npm等包管理工具） hugo （Hugo是由Go语言实现的静态网站生成器。简单、易用、高效、易扩展、快速部署。） git （版本控制）  2)安装方法 homebrew：  terminal输入 /usr/bin/ruby -e \u0026quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install 自动完成安装  hogo 利用braw：  brew install hugo  git：  brew install git   hugo 网页创建   hugo new site myblog生成站点 myblog 可替换\n  打开网页theme.gohugo.io找主题\n  cd myblog进入path\n  例如：git clone https://github.com/vaga/hugo-theme-m10c.git themes/m10c在themes目录下下载m10c主题\n  hugo server -t m10c --buildDrafts本地启动服务器 在terminal中找到localhost地址，可检查网页是否本地成功打开\n  写文档：hugo new post/blog.md创建第一个markdown文档\n  在远端github 创建repository\n  hugo --theme=m10c --baseUrl=\u0026quot;http://XXXXXXX.github.io/\u0026quot; --buildDrafts 关联远端地址自动生成public文件\n   cd public/ git init //初始化public文件夹使之成为git包 git add . git commit -m\u0026quot;my hugo first blog\u0026quot; git remote add origin http://github.com/xxxxxxx/xxxxxxx.github.io.git git push -u origin master //first time  -更新页面\ncd myblog hugo cd public git add . git status git commit -m \u0026quot;add blog post\u0026quot; git push 有问题？ 搞不成？ 问我！ Email ： dingsiyu0107@gmail.com\n",
    "ref": "/post/blog1/"
  }]
